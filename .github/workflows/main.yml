name: Deploy Targafy-Backend

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_PASSWORD }}"

      - name: Build and Push Multi-Arch Docker Image
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t barathwaj911/stride-backend:latest \
            --push .

  deploy-main:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: main
    steps:
      - name: Stop and Remove Existing Container (if exists)
        run: |
          sudo docker stop stride-backend-container || true
          sudo docker rm stride-backend-container || true

      - name: Remove old images
        run: |
          sudo docker image prune -af --filter "label=com.docker.compose.project=targafy"
          sudo docker rmi stride-backend:latest || true

      - name: Pull Image from Docker Hub
        run: sudo docker pull barathwaj911/stride-backend:latest

      - name: Run Docker Container
        run: |
          sudo docker run -d -p 443:443 -p 80:80 --name stride-backend-container \
            -e ACCESS_TOKEN_SECRET='${{ secrets.ACCESS_TOKEN_SECRET }}' \
            -e ACCESS_TOKEN_SECRET_ADMIN='${{ secrets.ACCESS_TOKEN_SECRET_ADMIN }}' \
            -e ACCESS_TOKEN_EXPIRY='${{ secrets.ACCESS_TOKEN_EXPIRY }}' \
            -e AWS_ACCESS_KEY='${{ secrets.AWS_ACCESS_KEY }}' \
            -e AWS_SECRET_KEY='${{ secrets.AWS_SECRET_KEY }}' \
            -e HTTPS_PORT='${{ secrets.HTTPS_PORT }}' \
            -e HTTP_PORT='${{ secrets.HTTP_PORT }}' \
              barathwaj911/stride-backend:latest

      - name: Clean up old images
        run: sudo docker image prune -af

  deploy-dev:
    needs: build
    if: github.ref == 'refs/heads/dev'
    runs-on: dev
    steps:
      - name: Stop and Remove Existing Container (if exists)
        run: |
          sudo docker stop stride-backend-container || true
          sudo docker rm stride-backend-container || true

      - name: Remove old images
        run: |
          sudo docker image prune -af --filter "label=com.docker.compose.project=stride-backend"
          sudo docker rmi barathwaj911/stride-backend:latest || true

      - name: Pull Image from Docker Hub
        run: sudo docker pull barathwaj911/stride-backend:latest

      - name: Run Docker Container
        run: |
          sudo docker run -d -p 443:443 -p 80:80 --name stride-backend-container \
            -e ACCESS_TOKEN_SECRET='${{ secrets.ACCESS_TOKEN_SECRET }}' \
            -e ACCESS_TOKEN_SECRET_ADMIN='${{ secrets.ACCESS_TOKEN_SECRET_ADMIN }}' \
            -e ACCESS_TOKEN_EXPIRY='${{ secrets.ACCESS_TOKEN_EXPIRY }}' \
            -e AWS_ACCESS_KEY='${{ secrets.AWS_ACCESS_KEY }}' \
            -e AWS_SECRET_KEY='${{ secrets.AWS_SECRET_KEY }}' \
            -e HTTPS_PORT='${{ secrets.HTTPS_PORT }}' \
            -e HTTP_PORT='${{ secrets.HTTP_PORT }}' \
              barath911/stride-backend:latest

      - name: Clean up old images
        run: sudo docker image prune -af
